/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public int[] nextLargerNodes(ListNode head) {
        if(head == null)
            return new int[0];
        ArrayList<Integer> list = new ArrayList<>();
        Stack<Integer> stack = new Stack<>();
        ListNode ptr = head;
        int index = 0;
        while(ptr != null)
        {
            list.add(ptr.val);
            index++;
            while(!stack.isEmpty() && list.get(index-1)>list.get(stack.peek()))
                list.set(stack.pop(),list.get(index-1));
            stack.push(index-1);
            ptr = ptr.next;
        }
        while(!stack.isEmpty())
            list.set(stack.pop(),0);
        int[] arr = new int[list.size()];
        int i=0;
        for(int a:list)
            arr[i++] = a;
        return arr;
    }
}
